{"ast":null,"code":"var _jsxFileName = \"/Users/user/School/CS312/GroupProject/Project_Group_6_Task_Management_Application/frontend/client/src/pages/TaskCreation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport TaskHandling from \"../components/TaskHandling\"; // Assuming TaskHandling manages the task form logic\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCreation = () => {\n  _s();\n  // State to track whether the task was successfully created\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // Refresh function (can be expanded to handle post-creation updates if needed)\n  const refresh = () => {\n    setSuccessMessage(\"Task created successfully!\");\n    setTimeout(() => setSuccessMessage(\"\"), 3000); // Clear message after 3 seconds\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Create a task here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\"\n        },\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(TaskHandling, {\n        task: null,\n        close: () => {},\n        refresh: refresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCreation, \"HXVqXBEXJtgAEhzgpaCzO52c5UE=\");\n_c = TaskCreation;\nexport default TaskCreation;\nvar _c;\n$RefreshReg$(_c, \"TaskCreation\");","map":{"version":3,"names":["React","useState","Header","Footer","TaskHandling","jsxDEV","_jsxDEV","TaskCreation","_s","successMessage","setSuccessMessage","refresh","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","task","close","_c","$RefreshReg$"],"sources":["/Users/user/School/CS312/GroupProject/Project_Group_6_Task_Management_Application/frontend/client/src/pages/TaskCreation.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport TaskHandling from \"../components/TaskHandling\"; // Assuming TaskHandling manages the task form logic\r\n\r\nconst TaskCreation = () => {\r\n  // State to track whether the task was successfully created\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  // Refresh function (can be expanded to handle post-creation updates if needed)\r\n  const refresh = () => {\r\n    setSuccessMessage(\"Task created successfully!\");\r\n    setTimeout(() => setSuccessMessage(\"\"), 3000); // Clear message after 3 seconds\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <Header />\r\n      <div className=\"main\">\r\n        <p>\r\n          <b>Create a task here!</b>\r\n        </p>\r\n        {successMessage && <p style={{ color: \"green\" }}>{successMessage}</p>}\r\n        {/* Pass necessary props to TaskHandling */}\r\n        <TaskHandling task={null} close={() => {}} refresh={refresh} />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCreation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,YAAY,MAAM,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMU,OAAO,GAAGA,CAAA,KAAM;IACpBD,iBAAiB,CAAC,4BAA4B,CAAC;IAC/CE,UAAU,CAAC,MAAMF,iBAAiB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACjD,CAAC;EAED,oBACEJ,OAAA;IAAKO,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBR,OAAA,CAACJ,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVZ,OAAA;MAAKO,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBR,OAAA;QAAAQ,QAAA,eACER,OAAA;UAAAQ,QAAA,EAAG;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,EACHT,cAAc,iBAAIH,OAAA;QAAGa,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAN,QAAA,EAAEL;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAErEZ,OAAA,CAACF,YAAY;QAACiB,IAAI,EAAE,IAAK;QAACC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAE;QAACX,OAAO,EAAEA;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACNZ,OAAA,CAACH,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACV,EAAA,CAxBID,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}