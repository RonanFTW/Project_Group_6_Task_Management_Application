{"ast":null,"code":"var _jsxFileName = \"/Users/user/School/CS312/GroupProject/Project_Group_6_Task_Management_Application/frontend/client/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ApiConnection from \"..api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  filters\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  useEffect(() => {\n    API.get(\"/tasks\").then(response => setTasks(response.data)).catch(error => console.error(\"Error fetching tasks:\", error));\n  }, []);\n  useEffect(() => {\n    let updatedTasks = tasks;\n    if (filters.status) {\n      updatedTasks = updatedTasks.filter(task => task.status === filters.status);\n    }\n    if (filters.priority) {\n      updatedTasks = updatedTasks.filter(task => task.priority === filters.priority);\n    }\n    if (filters.dueDate) {\n      updatedTasks = updatedTasks.filter(task => new Date(task.dueDate) <= new Date(filters.dueDate));\n    }\n    setFilteredTasks(updatedTasks);\n  }, [filters, tasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), \": \", task.status, \" - \", task.priority]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"/nfW99VK7hh6CR9I+tylLjEGT3I=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","ApiConnection","jsxDEV","_jsxDEV","TaskList","filters","_s","tasks","setTasks","filteredTasks","setFilteredTasks","API","get","then","response","data","catch","error","console","updatedTasks","status","filter","task","priority","dueDate","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","id","_c","$RefreshReg$"],"sources":["/Users/user/School/CS312/GroupProject/Project_Group_6_Task_Management_Application/frontend/client/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ApiConnection from \"..api/Api\";\r\n\r\nconst TaskList = ({ filters }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filteredTasks, setFilteredTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    API.get(\"/tasks\")\r\n      .then((response) => setTasks(response.data))\r\n      .catch((error) => console.error(\"Error fetching tasks:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let updatedTasks = tasks;\r\n\r\n    if (filters.status) {\r\n      updatedTasks = updatedTasks.filter(\r\n        (task) => task.status === filters.status\r\n      );\r\n    }\r\n\r\n    if (filters.priority) {\r\n      updatedTasks = updatedTasks.filter(\r\n        (task) => task.priority === filters.priority\r\n      );\r\n    }\r\n\r\n    if (filters.dueDate) {\r\n      updatedTasks = updatedTasks.filter(\r\n        (task) => new Date(task.dueDate) <= new Date(filters.dueDate)\r\n      );\r\n    }\r\n\r\n    setFilteredTasks(updatedTasks);\r\n  }, [filters, tasks]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Task List</h1>\r\n      <ul>\r\n        {filteredTasks.map((task) => (\r\n          <li key={task.id}>\r\n            <strong>{task.title}</strong>: {task.status} - {task.priority}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACdY,GAAG,CAACC,GAAG,CAAC,QAAQ,CAAC,CACdC,IAAI,CAAEC,QAAQ,IAAKN,QAAQ,CAACM,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACd,IAAIoB,YAAY,GAAGZ,KAAK;IAExB,IAAIF,OAAO,CAACe,MAAM,EAAE;MAClBD,YAAY,GAAGA,YAAY,CAACE,MAAM,CAC/BC,IAAI,IAAKA,IAAI,CAACF,MAAM,KAAKf,OAAO,CAACe,MACpC,CAAC;IACH;IAEA,IAAIf,OAAO,CAACkB,QAAQ,EAAE;MACpBJ,YAAY,GAAGA,YAAY,CAACE,MAAM,CAC/BC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAKlB,OAAO,CAACkB,QACtC,CAAC;IACH;IAEA,IAAIlB,OAAO,CAACmB,OAAO,EAAE;MACnBL,YAAY,GAAGA,YAAY,CAACE,MAAM,CAC/BC,IAAI,IAAK,IAAIG,IAAI,CAACH,IAAI,CAACE,OAAO,CAAC,IAAI,IAAIC,IAAI,CAACpB,OAAO,CAACmB,OAAO,CAC9D,CAAC;IACH;IAEAd,gBAAgB,CAACS,YAAY,CAAC;EAChC,CAAC,EAAE,CAACd,OAAO,EAAEE,KAAK,CAAC,CAAC;EAEpB,oBACEJ,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB3B,OAAA;MAAAuB,QAAA,EACGjB,aAAa,CAACsB,GAAG,CAAET,IAAI,iBACtBnB,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAAuB,QAAA,EAASJ,IAAI,CAACU;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACR,IAAI,CAACF,MAAM,EAAC,KAAG,EAACE,IAAI,CAACC,QAAQ;MAAA,GADtDD,IAAI,CAACW,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9CIF,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}